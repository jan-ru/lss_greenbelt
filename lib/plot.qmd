```{python}
#| label: fig-lineplot
#| fig-cap: "A line plot showing progress on the e-learnings"

import matplotlib.pyplot as plt

# Data for plotting
weeks_first_line = [0,10]  # Week 1 through 10
hours_first_line = [0,25]  # 0 to 25 hours, linear increase

weeks_second_line = [0,9]  # Week 1 through 9
hours_second_line = [0,25]  # 0 to 25 hours, linear increase ending at week 9

# Create a line plot
plt.figure(figsize=(10, 5))  # Set the figure size
plt.plot(weeks_first_line, hours_first_line, marker='o', linestyle='-', color='b', label="huidige doorlooptijd")  # First line
plt.plot(weeks_second_line, hours_second_line, marker='o', linestyle='-', color='r', label="gewenste doorlooptijd")  # Second line

# Setting the labels for the axes
plt.xlabel('Doorlooptijd (weken)')
plt.ylabel('Studiebelasting (uren/blok)')

# Setting the range for the axes
plt.xlim(0, 10)  # X-axis from week 1 to 10
plt.ylim(0, 25)  # Y-axis from 0 to 25 hours
plt.xticks(range(1, 11))  # X-axis ticks at every week from 1 to 10

# Adding a title
plt.title('Doorlooptijd e-learnings')

# Adding an arrow with a label
plt.annotate(
    'doelstelling:\n10% verlagen',  # text to display
    xy=(8, 22.5),  # point to annotate (arrow head)
    xytext=(9, 22.5),  # start point of the text (arrow tail)
    arrowprops=dict(arrowstyle='->', lw=1.5, color='green'),  # style of the arrow
    ha='left',  # horizontal alignment of the text
    va='center',  # vertical alignment
    # rotation=45  # text angle
)

# Display the grid and legend
plt.grid(True)
plt.legend()

# Show the plot
plt.show()
```